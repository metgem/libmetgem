name: Tests

on:
  push:
    branches: [ master, dev ]
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      CYTHON_LINETRACE: true
    strategy:
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest, windows-latest, macos-latest]
        # exclude:  # Temporarily disable release for macos and python 3.8 as there is a bug with openblas
          # - os: macos-latest
            # python-version: 3.8
      #fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} (Miniconda)
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        auto-update-conda: true
        mamba-version: "*"
        channel-priority: strict
        channels: conda-forge
        python-version: ${{ matrix.python-version }}
    - name: Conda info
      shell: bash -l {0}
      run: |
        mamba info
        mamba list
        mamba config --show-sources
        mamba config --show
    - name: Install build dependencies
      shell: bash -l {0}
      run: |
        mamba install -n base conda-build conda-verify numpy
        mamba install numpy cython cxx-compiler scipy
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1
      if: ${{ runner.os == 'Windows' }}
    - name: Build
      shell: bash -l {0}
      run: |
        python -m pip install . -vv
    - name: Install test dependencies
      shell: bash -l {0}
      run: |
        mamba install -q pytest pylint pytest-pylint toml pytest-cov codecov pytest-mock
        mamba install pyteomics -c bioconda
    - name: Install xvfb
      shell: bash -l {0}
      run: mamba install pytest-xvfb
      if: runner.os == 'Linux'
    - name: Test with pytest
      shell: bash -l {0}
      run: pytest --cov=libmetgem --cov-report=xml
    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        name: ${{ runner.os }} Python ${{ matrix.python-version }}
